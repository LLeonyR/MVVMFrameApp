/**
 * maven 插件相关
 * https://www.jianshu.com/p/54e0107a2696
 */
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka-android'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging libraryPackaging
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDesc
                url websiteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection websiteUrl
                    developerConnection websiteUrl
                    url websiteUrl

                }
            }
        }
    }
}

/*task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir
}

task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives generateJavadoc //javadocJar
    archives generateSourcesJar //sourcesJar
}*/

/**
 * bintray上传
 */
apply plugin: 'com.jfrog.bintray'

def siteUrl = project.websiteUrl
def gitUrl = project.vcsUrl
def libName = project.name

group = project.publishedGroupId
version = project.versionName

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']

    pkg {
        repo = project.bintrayRepo  //发布到Bintray的maven库
        name = libName  //发布到Bintray上的项目名字
        desc = project.libraryDesc
        publish = true
        publicDownloadNumbers = true
        websiteUrl = siteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = gitUrl
        licenses = [project.licenseName]
        publish = true
        //attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        version {
            desc = project.libraryVersionDesc
            released = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
/*
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}*/

/**
 * 合并打包和上传
 * 执行./gradlew jcenter
 * 自定完胜打包和上传
 */
task jcenter {
    doLast {
        println "Release ${version}"
    }
}

jcenter.dependsOn(install)
jcenter.dependsOn(bintrayUpload)